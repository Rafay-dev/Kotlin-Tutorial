package CheezyCodeOOP.Inheritance.Overriding

fun main() {
    // :2.1
    val onePlus = OnePlus()
    println("Mobile Name: ${onePlus.name}")
    println("Screen Size:  ${onePlus.size}")
    println()
    onePlus.display()

    println("\n")
    // :4.2
    val googleNexus = GoogleNexus("SmartPhone")
    println("Google Nexus is a ${googleNexus.type}")

    println()
    // 4.5
    val nokia = Nokia()
    println("This Nokia is a ${nokia.type} type phone")
    println()

    // 5.1
    val blackBerry = BlackBerry()
    println(blackBerry.toString())

}

// 1
open class Mobile(){

    // Using 'open' keyword, so that the 'Method' or 'Property' can be 'Override' in 'Child' class

    open val name: String = ""
    open val size: Int = 5
    fun makeCall() = println("Calling from mobile")
    fun powerOff() = println("Shutting Down")

    open fun display() = println("Simple Mobile Display")

}

// :2
class OnePlus : Mobile(){

    override val name: String = "One Plus"
    override val size: Int = 6
    override fun display(){

        // 'super' keyword can be used to call parent class (Mobile) 'methods' or 'properties'
        super.display()

        println("One Plus Display")
    }


}

// :4
// Create Parameterized Constructor & Access it with 'Inheritance'
open class Mobile2(val type: String){

}

// :4.1
// * Now when if we inherit 'Mobile2' class, we have to pass 'type'  value in parameters during 'Inheritance' & as well as when creating object of 'Child' class
class GoogleNexus(typeParam: String) : Mobile2(typeParam)
{

}

// Or

// 4.4
class Nokia : Mobile2("Symbian"){

}

// 5
// Builtin functions can also be override // ** Every Kotlin Class is inherited from 'Any' class
class BlackBerry : Mobile()
{
    override val name: String = "BlackBerry"
    override val size: Int = 4
    val type: String = "BlackBerry"

    // * This method can also generated by pressing 'Alt+Insert'
    // * The existing method will be deleted
    override fun toString(): String {
        return "Name: $name \n" +
                "Size: $size \n" +
                "Type: $type"
    }
}
